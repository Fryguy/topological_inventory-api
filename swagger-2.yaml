swagger: '2.0'
info:
  description: Topological Inventory
  version: 0.0.1
  title: Topological Inventory
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
securityDefinitions:
  UserSecurity:
    type: basic
security:
  - UserSecurity: []

# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular authenticated users

paths:
  /providers:
    get:
      tags:
      - users
      summary: List Providers
      operationId: listProviders
      description: |
        Returns an array of provider objects
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: Provider Info
          schema:
            type: array
            items:
              $ref: '#/definitions/Provider'
        400:
          description: bad input parameter
    post:
      tags:
      - admins
      summary: Add a Provider
      operationId: addProvider
      description: |
        Returns the added provider object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
            $ref: '#/definitions/Provider'

      responses:
        200:
          description: Provider Info
          schema:
            type: object
            items:
              $ref: '#/definitions/Provider'
        400:
          description: bad input parameter
  /service_offerings:
    get:
      tags:
      - users
      summary: List ServiceOfferings
      operationId: listServiceOfferings
      description: Returns an array of ServiceOffering objects
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: ServiceOffering info
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceOffering'
        400:
          description: bad input parameter
  /service_parameters_sets:
    get:
      tags:
      - users
      summary: List ServiceParametersSets
      operationId: listServiceParametersSets
      description: Returns an array of ServiceParametersSet objects
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: ServiceParametersSets info
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceParametersSet'
        400:
          description: bad input parameter
  /sources/{sourceId}:
    delete:
      summary: Delete Source
      operationId: deleteSource
      description: Deletes a Source object
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        204:
          description: Source deleted
        404:
          description: not found
    get:
      summary: Show Source
      operationId: showSource
      description: Returns a Source object
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: Source info
          schema:
            $ref: '#/definitions/Source'
        404:
          description: not found
    patch:
      summary: Update Source
      operationId: updateSource
      description: Updates a Source object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: name
        in: name
        schema:
            $ref: '#/definitions/Source'
      responses:
        204:
          description: Updated, no content
        404:
          description: not found
  /sources:
    get:
      tags:
      - users
      summary: List Sources
      operationId: listSources
      description: Returns an array of Source objects
      produces:
      - application/json
      consumes:
      - application/json
      responses:
        200:
          description: Sources info
          schema:
            type: array
            items:
              $ref: '#/definitions/Source'
        400:
          description: bad input parameter
    post:
      tags:
      - admins
      summary: Create a Source
      operationId: Source
      description: Returns the created Source object
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
            $ref: '#/definitions/Source'
      responses:
        201:
          description: Source Info
          schema:
            type: object
            items:
              $ref: '#/definitions/Source'

# define reusable parameters:
parameters:
  ProviderID:
    name: provider_id
    in: path
    description: The Provider ID
    required: true
    type: string
    format: uuid
  OptionalProviderID:
    name: provider_id
    in: query
    description: The Provider ID
    type: integer

# define reusable definitions
definitions:
  Provider:
    type: object
    required:
    - name
    - url
    - token
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: Sample Provider
        title: Name
      description:
        type: string
        example: This is a sample description for a provider
        title: Description
      url:
        type: string
        format: url
        example: The REST API end point for the provider
        title: Provider URL
      user:
        type: string
        title: User
        description: The user used to connect to the provider
      password:
        type: string
        title: Password
        description: The password used to connect to the provider
      token:
        type: string
        title: Token
        description: The token used to connect to the provider
      verify_ssl:
        type: boolean
        default: true
        title: Verify Server Certificate
        description: Verify the servers certificate, you can disable it for servers with self signed certificates.
  ServiceOffering:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: Sample Provider
        title: Name
      description:
        type: string
        example: This is a sample description for a provider
        title: Description
      ems_ref:
        type: string
        example: object-12345_67890
        title: EMS reference
        description: The native reference used by the EMS to refer to this object
      extra:
        type: object
        example: Extra information about this object in JSON format
        title: Extra
  ServiceParametersSet:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: Sample Provider
        title: Name
      description:
        type: string
        example: This is a sample description for a provider
        title: Description
      ems_ref:
        type: string
        example: object-12345_67890
        title: EMS reference
        description: The native reference used by the EMS to refer to this object
      extra:
        type: object
        example: Extra information about this object in JSON format
        title: Extra
  Source:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: uuid
      name:
        type: string
        example: Sample Provider
        title: Name
      external_uid:
        type: string
        readOnly: true
        title: Unique ID of the inventory source installation

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
schemes:
 - https
 - http
basePath: /Fryguy/topological_inventory/0.0.1
